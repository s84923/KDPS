# Generated by Django 5.1.5 on 2025-01-23 03:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuthTokens',
            fields=[
                ('token_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('token', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField()),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('error_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('error_message', models.TextField(max_length=200)),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='GeminiTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('total_score', models.IntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='GradingCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('question_type', models.CharField(choices=[('objective', '選択問題'), ('descriptive', '記述問題')], default='descriptive', max_length=20)),
                ('correct_answer', models.TextField()),
                ('choices', models.TextField(blank=True, null=True)),
                ('score', models.IntegerField(default=10)),
                ('partial_scoring_conditions', models.TextField(blank=True, help_text="部分点条件（記述問題用）。例: '重要なキーワード1:3, 重要なキーワード2:5'", null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.IntegerField(primary_key=True, serialize=False)),
                ('student_name', models.CharField(max_length=20)),
                ('school_year', models.IntegerField()),
                ('student_class', models.CharField(max_length=3)),
                ('email', models.CharField(max_length=30)),
                ('parent_email', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('teacher_name', models.CharField(max_length=20)),
                ('school_year', models.IntegerField()),
                ('email', models.CharField(default='', max_length=30)),
                ('student_class', models.CharField(max_length=3)),
                ('post', models.CharField(max_length=10)),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('test_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_name', models.CharField(max_length=20)),
                ('teacher_id', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ConversationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.TextField()),
                ('feedback', models.TextField()),
                ('score', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history', to='KDPS.question')),
            ],
        ),
        migrations.CreateModel(
            name='TempAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('answer_text', models.TextField()),
                ('is_finalized', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KDPS.question')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='test',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='KDPS.test'),
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('answer_image', models.BinaryField()),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KDPS.student')),
                ('test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KDPS.test')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('teacher_id', models.CharField(blank=True, max_length=10, null=True)),
                ('password', models.CharField(max_length=12)),
                ('authority', models.IntegerField()),
                ('role', models.CharField(choices=[('student', '学生'), ('teacher', '教師'), ('admin', '管理者')], default='student', max_length=10)),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='KDPS.student')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('class_name', models.CharField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('admin', 'Admin')], default='student', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='KDPS.user')),
            ],
        ),
    ]
